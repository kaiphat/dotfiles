[user]
    email = iliyapunko@gmail.com
    name = Ilya Punko

[commit]
    gpgsign = false

[pull]
    rebase = false

[core]
    autocrlf = input
    safecrlf = false
    editor = nvim
    ; npm i -g diff-so-fancy
    pager = "diff-so-fancy | less --tabs=4 -RFX"
    diffFilter = "diff-so-fancy --patch"

[color]
    ui = auto

[diff-so-fancy]
    markEmptyLines = false

[alias]
    l   = log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --max-count 12
    lm  = log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --max-count 1000
    a   = add -A
    f   = fetch origin
    ch  = checkout
    # checkout previous
    chp  = checkout @{-1}
    chd  = checkout develop
    chb = checkout -b
    c   = commit -am
    ca  = commit --amend --no-edit
    s   = !sh -c 'git add -A && git stash'
    sa  = stash apply
    pl  = pull origin
    plr  = !sh -c 'git pull origin $1 --rebase' --
    plnr  = !sh -c 'git pull origin $1 --no-rebase' --
    # discard staged changes
    dsc = !sh -c 'git add -A && git stash && git sa' --
    # fast commit
    fc = !sh -c 'git add -A && git commit -m "DRAFT" --no-verify' --
    plh = !git pull origin $(git rev-parse --abbrev-ref HEAD)
    p   = push origin
    ph  = push origin HEAD
    phforce = push origin HEAD -f
    d   = diff HEAD
    d1  = diff HEAD~1
    ds  = diff HEAD --shortstat
    ds1 = diff HEAD~1 --shortstat
    # list branches sorted by last modified
    b   = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
    bd  = branch -D
    # branch list
    bl = for-each-ref --count 30 --sort=-committerdate --format='%(color:yellow)%(refname:short)%(color:reset) %(color:green)%(committerdate:relative) %(color:red)%(contents:subject)%(color:reset)' --color refs/heads
    bdr  = push -d origin
    m   = merge
    ce  = config --global --edit
    rs  = !sh -c 'git reset --soft HEAD~$1 && git dsc' --
    refresh  = !sh -c 'git reset --hard HEAD~100 && git plh' --
    rc  = rebase --continue
    ra  = rebase --abort
    cp  = cherry-pick
    create-pr = !sh -c 'gh pr create --fill-first -w'

[difftool]
    prompt = true
